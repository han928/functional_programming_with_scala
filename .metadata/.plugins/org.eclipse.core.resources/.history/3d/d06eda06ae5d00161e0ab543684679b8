package week2

object rational {
  println("Welcome to the Scala worksheet")
  
	val x = new Rational(1, 3)
  val y = new Rational(5, 7)
  val z = new Rational(3, 2)
  x.numer
  x.denom
  x.sub(y).sub(z)
  y.add(y)
  
  val strange = new Rational(1, 0)
  
}

class Rational(x:Int, y:Int){
	require(y != 0, "denominator must not be zero")

	private def gcd(a: Int, b: Int): Int = if (b==0) a else gcd(b, a%b) //private for the class Rational
	private def g = gcd(x, y)

	def numer = x/g
	def denom = y/g
	
	def less(that: Rational) = numer * that.denom < that.numer * denom
	
	def max(that: Rational) = if (this.less(that)) that else this // this is similar to self ( "this" object)
	
	def add(that:Rational) =
		new Rational(
		numer * that.denom + that.numer*denom, denom*that.denom)
	
	def sub(that:Rational) = add(that.neg)
	
	override def toString = numer + "/" + denom
	
	def neg =
		new Rational( -numer, denom)
	
}